1. emailValidationTest

Test Case: Email Validation Test
Description: Verify that the form submission behavior is correct for valid and invalid email addresses.
Test Data: 
    - "test1@example.com" (valid)
    - "test2@example.com" (valid)
    - "invalid-email" (invalid)
Expected Result: 
    - Valid emails should result in successful form submission.
    - Invalid email should prevent form submission.

2. registrationTest

Test Case: Registration Test
Description: Verify that the form handles various combinations of first name, last name, and email correctly.
Test Data:
    - John, Doe, john.doe@example.com
    - Test, User, test.user@example.com
Expected Result:
    - The form should correctly display the student's full name and email in the results.

3. successfulFormSubmissionTest

Test Case: Successful Form Submission Test
Description: Verify that the form can be successfully submitted with randomly generated valid data.
Test Data: Randomly generated using `RandomUtils`.
Expected Result: 
    - The form should display all submitted data correctly in the results table.

